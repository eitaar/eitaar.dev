---
interface Props {
  label: string;
  variant?: "solid" | "outline" | "soft";
  isRadio?: boolean;
  size?: "sm" | "md" | "lg";
  name?: string;
  selected?: boolean;
}

const {
  label,
  variant = "soft",
  isRadio = false,
  size = "md",
  name,
  selected = false,
} = Astro.props;

const baseClasses =
  "inline-flex items-center justify-center font-semibold rounded-full";

const sizeMap = {
  sm: "px-3 py-1 text-xs",
  md: "px-4 py-2 text-sm",
  lg: "px-6 py-2 text-base",
};

const sizeClasses = sizeMap[size];

const normalColorVariants = {
  solid: "bg-primary text-primary-content",
  outline: "border-2 border-primary text-primary",
  soft: "bg-primary/20 text-primary",
};

const radioColorVariants = {
  unselected: "bg-base-200/90 text-base-content hover:bg-base-200",
  selected: "bg-primary/20 text-primary hover:bg-primary/30",
};

const variantClasses = isRadio
  ? radioColorVariants.unselected
  : normalColorVariants[variant];

const hoverClasses = isRadio ? "hover:bg-primary/30" : "";

const classList = [baseClasses, sizeClasses, variantClasses, hoverClasses];
---

{
  isRadio ? (
    name ? (
      <label
        class:list={[
          baseClasses,
          sizeClasses,
          "has-checked:bg-primary/20 has-checked:text-primary",
          "bg-base-100/60 text-base-content hover:bg-base-100",
          "cursor-pointer transition-colors duration-200",
        ]}
      >
        <input
          type="radio"
          name={name}
          value={label}
          class="sr-only"
          checked={selected}
        />
        {label}
      </label>
    ) : (
      <label
        class:list={[
          baseClasses,
          sizeClasses,
          "has-checked:bg-primary/20 has-checked:text-primary",
          "bg-base-200/50 text-base-content hover:bg-base-200",
        ]}
      >
        <input type="radio" name={name} value={label} class="sr-only" />
        {label}
      </label>
    )
  ) : (
    <div class:list={classList}>{label}</div>
  )
}
